name: Build Tiny11 ISO

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build-tiny11:
    name: Build Tiny11
    runs-on: windows-latest
    timeout-minutes: 180

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup environment
      shell: powershell
      run: |
        Set-ExecutionPolicy Unrestricted -Scope Process -Force
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module -Name 7Zip4PowerShell -Force -Confirm:$false

    - name: Download all required files
      shell: powershell
      run: |
        # Buat struktur folder yang diperlukan
        New-Item -Path ".\files" -ItemType Directory -Force
        
        # Download skrip utama
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/25h2/uup_download_windows.cmd" -OutFile "uup_download_windows.cmd"
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/tiny11Coremaker.ps1" -OutFile "tiny11Coremaker.ps1"
        
        # Download dependensi yang hilang
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/25h2/files/get_aria2.ps1" -OutFile "files\get_aria2.ps1"
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/25h2/files/aria2.exe" -OutFile "files\aria2.exe"
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/25h2/files/ConvertConfig.ps1" -OutFile "files\ConvertConfig.ps1"
        Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pitekkate/tiny11builder/main/25h2/files/uup_download_macos" -OutFile "files\uup_download_macos"

    - name: Download Windows ISO
      shell: cmd
      run: |
        uup_download_windows.cmd
      env:
        _COMPLETE: "y"

    - name: Find downloaded ISO
      id: find-iso
      shell: powershell
      run: |
        $iso = Get-ChildItem -Path . -Filter *.iso | Select-Object -First 1
        if ($iso) {
          Write-Output "ISO_FILE=$($iso.Name)" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Output "iso_file=$($iso.Name)" >> $env:GITHUB_OUTPUT
        } else {
          Write-Error "ISO file not found!"
          Get-ChildItem -Path . -Recurse | Out-String | Write-Output
          exit 1
        }

    - name: Build Tiny11
      shell: powershell
      run: |
        .\tiny11Coremaker.ps1 -IsoPath "$env:ISO_FILE"
      env:
        ISO_FILE: ${{ env.ISO_FILE }}

    - name: Upload Tiny11 ISO
      uses: actions/upload-artifact@v4
      with:
        name: tiny11-iso
        path: |
          *tiny11*.iso
        retention-days: 3

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          *.txt
          *.log
        retention-days: 3
